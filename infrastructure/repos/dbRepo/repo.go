package dbRepo

import (
	"fmt"
	"github.com/jmoiron/sqlx"
	_ "github.com/lib/pq"
	"log"
	"todomodule/app"
	"todomodule/domain"
)

var schema = `
CREATE TABLE Todos (
id    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
todo  text NOT NULL
)`

var defaultConnStr string = "user=postgres password=wizard dbname=postgres sslmode=disable"
var defaultDriverName string = "postgres"

type dbRepo struct {
	db *sqlx.DB
}

func (r dbRepo) Create(todo domain.Todo) error {
	r.db.MustExec(`INSERT INTO todos (todo) VALUES ($1)`, todo.Name)
	//tx:=r.db.MustBegin()
	//tx.MustExec("INSERT into todos (todo) values ($1)", todo)
	//return tx.Commit()
	return nil
}
func (r dbRepo) GetAll() ([]domain.Todo, error) {
	var todos []domain.Todo
	r.db.Select(todos, "select * from todos")
	return todos, nil
}

func NewDbRepo(db *sqlx.DB) app.Repo {
	db, err := sqlx.Connect(defaultDriverName, defaultConnStr)
	if err != nil {
		log.Fatalln(err)
	}
	result, err := db.Exec(schema)
	fmt.Println(result)
	//db.MustExec(schema)
	return &dbRepo{db: db}
}
